name: gophermart

services:
    gophermart:
        build:
            context: ../
            dockerfile: ./docker/gophermart.dockerfile
        image: gophermart
        container_name: gophermart
        hostname: gophermart
        ports:
            - "8080:8080"
            - "40000:40000"
        restart: always
        environment:
            RUN_ADDRESS: ${RUN_ADDRESS:?Please specify the RUN_ADDRESS variable in the .env file}
            DATABASE_URI: ${DATABASE_URI:?Please specify the DATABASE_URI variable in the .env file}
            ACCRUAL_SYSTEM_ADDRESS: ${ACCRUAL_SYSTEM_ADDRESS:?Please specify the ACCRUAL_SYSTEM_ADDRESS variable in the .env file}
            SECRET_KEY: ${SECRET_KEY:?Please specify the SECRET_KEY variable in the .env file}
        security_opt:
            - "seccomp:unconfined"
        cap_add:
            - SYS_PTRACE
        command:
            - /dlv --headless --listen=:40000 --api-version=2 exec /server
        deploy:
            restart_policy:
                condition: on-failure
        networks:
            - gophermart-network
        depends_on:
            postgres:
                condition: service_healthy
            accrual:
                condition: service_started

    accrual:
        build:
            context: ../
            dockerfile: ./docker/accrual.dockerfile
        image: accrual
        container_name: accrual
        restart: always
        environment:
            RUN_ADDRESS: ${RUN_ADDRESS:?Please specify the RUN_ADDRESS variable in the .env file}
            DATABASE_URI: ${DATABASE_URI:?Please specify the DATABASE_URI variable in the .env file}
        networks:
            - gophermart-network
        depends_on:
            - postgres


    postgres:
        image: postgres:17
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "pg_isready", "--quiet", "--dbname", "${POSTGRES_DB}", "--username", "${POSTGRES_USER}"]
            start_period: 10s
            interval: 10s
            timeout: 30s
            retries: 10
        logging:
            driver: "gelf"
            options:
                gelf-address: "udp://localhost:12201"
                tag: postgres
        environment:
            POSTGRES_USER: ${POSTGRES_USER:?Please specify the POSTGRES_USER variable in the .env file}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?Please specify the POSTGRES_PASSWORD variable in the .env file}
            POSTGRES_DB: ${POSTGRES_DB:?Please specify the POSTGRES_DB variable in the .env file}
            POSTGRES_APP_USER: ${POSTGRES_APP_USER:?Please specify the POSTGRES_APP_USER variable in the .env file}
            POSTGRES_APP_PASS: ${POSTGRES_APP_PASS:?Please specify the POSTGRES_APP_PASS variable in the .env file}
            POSTGRES_APP_DB: ${POSTGRES_APP_DB:?Please specify the POSTGRES_APP_DB variable in the .env file}
        volumes:
            - ./postgres/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
            - ./volume/postgresql:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        networks:
            - gophermart-network

networks:
    gophermart-network:
        driver: bridge